{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tasim\\\\CS-Projects\\\\words-game\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//import { getWords } from \"./dataModules\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _words$count;\n\n  const [words, setWords] = useState(\"\");\n  const [count, setCount] = useState(1);\n  const [value, setValue] = useState(null);\n  const [correctAnswers, setCorrectAnswers] = useState([]);\n  const [answersScore, setAnswersScore] = useState(null);\n  const checkedRef = useRef([]);\n  useEffect(() => {\n    function getWords() {\n      const request = axios.get(\"http://localhost:3001/data\");\n      return request.then(response => {\n        //   console.log(\"this is response from module 1\",response.data)\n        return setWords(response.data);\n      });\n    } //  console.log(words);\n\n\n    getWords();\n  }, []);\n\n  const handleCheck = e => {\n    setValue(e.target.value);\n  }; //submit answer\n\n\n  const submitWord = e => {\n    e.preventDefault(); //add current choosed value to the array of answers in state\n\n    console.log(value, \"the value adeed\");\n\n    if (value === words[count].pos) {\n      setCorrectAnswers([...correctAnswers, true]);\n      setAnswersScore(answersScore + 10);\n    } else {\n      setCorrectAnswers([...correctAnswers, false]);\n    } //map through the checkBox inputs stored in checkedRef to reset thier values after submiting the answer\n\n\n    checkedRef.current.map(element => element.checked = false); //reset value for new question\n\n    setValue(null); // counting till ten questions have been recieved \n\n    if (count < 10) {\n      setCount(count + 1);\n    } //console.log(answers,\"this is the array of answerd questions\");\n\n  };\n\n  console.log(\"this is the coorect answers array\", correctAnswers);\n  console.log(\"this is the array current score\", answersScore);\n  console.log(\"the current answers is \", correctAnswers[Number(count)] || \"no value\");\n  console.log(\"this is count \", count.typeof());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Choose the right answer that describe this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-word\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (_words$count = words[count]) === null || _words$count === void 0 ? void 0 : _words$count.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => submitWord(e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: element => {\n                checkedRef.current[0] = element;\n              },\n              onChange: e => handleCheck(e),\n              name: \"wordType\",\n              id: \"noun\",\n              type: \"radio\",\n              value: \"noun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"noun\",\n              children: \" Noun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: element => {\n                checkedRef.current[1] = element;\n              },\n              onChange: e => handleCheck(e),\n              name: \"wordType\",\n              id: \"verb\",\n              type: \"radio\",\n              value: \"verb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"verb\",\n              children: \" Verb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: element => {\n                checkedRef.current[2] = element;\n              },\n              onChange: e => handleCheck(e),\n              name: \"wordType\",\n              id: \"adjective\",\n              type: \"radio\",\n              value: \"adjective\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"adjective\",\n              children: \" Adjective\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: element => {\n                checkedRef.current[3] = element;\n              },\n              onChange: e => handleCheck(e),\n              name: \"wordType\",\n              id: \"adverb\",\n              type: \"radio\",\n              value: \"adverb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"adverb\",\n              children: \" Adverb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn-confirm\",\n              children: [\" \", \"Confirm\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"Progress:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === 1 && correctAnswers[count] === true ? \"right\" : \"wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === 2 && correctAnswers[count] === true ? \"right\" : \"wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === 3 && correctAnswers[count] === true ? \"right\" : \"wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === 4 && correctAnswers[count] === true ? \"right\" : \"wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === 5 && correctAnswers[count] === true ? \"right\" : \"wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === 6 && correctAnswers[count] === true ? \"right\" : \"wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === 7 && correctAnswers[count] === true ? \"right\" : \"wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === 8 && correctAnswers[count] === true ? \"right\" : \"wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === 9 && correctAnswers[count] === true ? \"right\" : \"wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === 10 && correctAnswers[count] === true ? \"right\" : \"wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"MFJ6IT3luvJh4ezQeub7G0yW4Sg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useRef","axios","App","words","setWords","count","setCount","value","setValue","correctAnswers","setCorrectAnswers","answersScore","setAnswersScore","checkedRef","getWords","request","get","then","response","data","handleCheck","e","target","submitWord","preventDefault","console","log","pos","current","map","element","checked","Number","typeof","word"],"sources":["C:/Users/Tasim/CS-Projects/words-game/client/src/App.js"],"sourcesContent":["//import { getWords } from \"./dataModules\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [words, setWords] = useState(\"\");\n  const [count, setCount] = useState(1);\n  const [value, setValue] = useState(null);\n  const[correctAnswers,setCorrectAnswers]=useState([])\n  const [answersScore, setAnswersScore] = useState(null);\n  const checkedRef = useRef([]);\n\n  useEffect(() => {\n    function getWords() {\n      const request = axios.get(\"http://localhost:3001/data\");\n\n      return request.then((response) => {\n        //   console.log(\"this is response from module 1\",response.data)\n\n        return setWords(response.data);\n      });\n    }\n  //  console.log(words);\n    getWords();\n  }, []);\n\n  const handleCheck = (e) => {\n    setValue(e.target.value);\n  };\n\n  //submit answer\n  const submitWord = (e) => {\n    e.preventDefault();\n\n    //add current choosed value to the array of answers in state\n    console.log(value, \"the value adeed\");\n    if (value === words[count].pos) {\n      setCorrectAnswers([...correctAnswers,true])\n      setAnswersScore(answersScore + 10);\n    }else{ setCorrectAnswers([...correctAnswers,false])}\n    //map through the checkBox inputs stored in checkedRef to reset thier values after submiting the answer\n    checkedRef.current.map((element) => (element.checked = false));\n\n    //reset value for new question\n    setValue(null);\n    // counting till ten questions have been recieved \n    if (count<10){setCount(count+1)}\n    \n\n    //console.log(answers,\"this is the array of answerd questions\");\n  };\n  console.log(\"this is the coorect answers array\",correctAnswers);\n\n  console.log( \"this is the array current score\",answersScore);\nconsole.log(\"the current answers is \",correctAnswers[Number(count)]||\"no value\");\nconsole.log(\"this is count \", count.typeof());\n  return (\n    <>\n      <div className=\"main-container\">\n        <section>\n          <h1 className=\"title\">\n            Choose the right answer that describe this word\n          </h1>\n          <div className=\"main-word\">\n            {\" \"}\n            <h2>{words[count]?.word}</h2>\n          </div>\n        </section>\n        <section>\n          <form onSubmit={(e) => submitWord(e)}>\n            <div>\n              <input\n                ref={(element) => {\n                  checkedRef.current[0] = element;\n                }}\n                onChange={(e) => handleCheck(e)}\n                name=\"wordType\"\n                id=\"noun\"\n                type=\"radio\"\n                value=\"noun\"\n              />\n              <label htmlFor=\"noun\"> Noun</label>\n              <input\n                ref={(element) => {\n                  checkedRef.current[1] = element;\n                }}\n                onChange={(e) => handleCheck(e)}\n                name=\"wordType\"\n                id=\"verb\"\n                type=\"radio\"\n                value=\"verb\"\n              />\n              <label htmlFor=\"verb\"> Verb</label>\n              <input\n                ref={(element) => {\n                  checkedRef.current[2] = element;\n                }}\n                onChange={(e) => handleCheck(e)}\n                name=\"wordType\"\n                id=\"adjective\"\n                type=\"radio\"\n                value=\"adjective\"\n              />\n              <label htmlFor=\"adjective\"> Adjective</label>\n              <input\n                ref={(element) => {\n                  checkedRef.current[3] = element;\n                }}\n                onChange={(e) => handleCheck(e)}\n                name=\"wordType\"\n                id=\"adverb\"\n                type=\"radio\"\n                value=\"adverb\"\n              />\n              <label htmlFor=\"adverb\"> Adverb</label>\n            </div>\n            <div>\n              <button type=\"submit\" className=\"btn-confirm\">\n                {\" \"}\n                Confirm{\" \"}\n              </button>\n            </div>\n          </form>\n        </section>\n      </div>\n      <footer>\n        Progress:\n        <span className={count===1 &&correctAnswers[count]===true ?\"right\":\"wrong\"}></span>\n        <span className={count===2 &&correctAnswers[count]===true ?\"right\":\"wrong\"}></span>\n        <span className={count===3 &&correctAnswers[count]===true ?\"right\":\"wrong\"}></span>\n        <span className={count===4 &&correctAnswers[count]===true ?\"right\":\"wrong\"}></span>\n        <span className={count===5 &&correctAnswers[count]===true ?\"right\":\"wrong\"}></span>\n        <span className={count===6 &&correctAnswers[count]===true ?\"right\":\"wrong\"}></span>\n        <span className={count===7 &&correctAnswers[count]===true ?\"right\":\"wrong\"}></span>\n        <span className={count===8 &&correctAnswers[count]===true ?\"right\":\"wrong\"}></span>\n        <span className={count===9 &&correctAnswers[count]===true ?\"right\":\"wrong\"}></span>\n        <span className={count===10 &&correctAnswers[count]===true ?\"right\":\"wrong\"}></span>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}